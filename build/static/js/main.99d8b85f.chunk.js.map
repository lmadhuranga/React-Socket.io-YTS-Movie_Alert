{"version":3,"sources":["globel.conf.js","components/MovieName.js","components/TorrentLinks.js","components/YoutubeLink.js","components/Subtitle.js","components/ImdbLink.js","components/MovieItem.js","components/MoviesList.js","App.js","serviceWorker.js","index.js"],"names":["appConfig","length","TorrentLinks","movie","this","props","newTile","title","substr","react_default","a","createElement","target","rel","href","url","year","Component","withStyles","theme","torrents","map","torrent","key","hash","concat","seeds","peers","size","quality","YoutubeLink","yt_code","youtubeUrl","Subtitle","toUrl","ImdbLink","code","MovieItem","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","state","value","_this$props","classes","Grid_default","container","wrap","spacing","item","ButtonBase_default","className","image","img","alt","title_long","src","medium_cover_image","xs","sm","direction","Typography_default","gutterBottom","variant","MovieName","genres","join","color","rating","language","LinearProgress_default","style","cursor","components_YoutubeLink","yt_trailer_code","components_TorrentLinks","components_ImdbLink","imdb_code","components_Subtitle","root","flexGrow","paper","padding","unit","margin","maxWidth","width","height","display","maxHeight","MoviesList","movies","liveCount","_this2","socket","socketIOClient","on","socketId","id","data","console","log","setState","latestMovies","removeAllListeners","off","satets","setTimeout","setup","bind","movieList","Paper_default","components_MovieItem","index_es","align","component","overflow","App","components_MoviesList","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.99d8b85f.chunk.js","sourcesContent":["export const appConfig = {\r\n    name : 'Yts Movies Lister',\r\n    localHost : 'http://192.168.15.5:3001',\r\n    movieName: {\r\n        length: 20\r\n    }\r\n}","import React, { Component } from 'react';\r\n// import PropTypes from 'prop-types';\r\n\r\nimport {  appConfig } from '../globel.conf'\r\n\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\nconst styles = theme => ({});\r\n\r\nclass TorrentLinks extends Component {\r\n\r\n  render() {\r\n    const { movie } = this.props; \r\n    const newTile = movie.title.substr(0, appConfig.movieName.length);\r\n    return (<span><a target=\"_blank\" rel=\"noopener noreferrer\"  href={ movie.url } title={ movie.title }> { newTile }</a> { movie.year } </span> );  \r\n  }\r\n}\r\n \r\n// TorrentLinks.propTypes = {\r\n//   classes: PropTypes.object.isRequired,\r\n// };\r\n\r\n\r\nexport default withStyles(styles)(TorrentLinks);","import React, { Component } from 'react';\r\n// import PropTypes from 'prop-types';\r\n\r\n// import {  appConfig as _config } from '../globel.conf'\r\n\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\nconst styles = theme => ({});\r\n\r\nclass TorrentLinks extends Component {\r\n\r\n  render() {\r\n    const { torrents } = this.props;\r\n    const torrentLinks = torrents.map((torrent)=> {\r\n            return(\r\n                <span key={ torrent.hash } >\r\n                    &nbsp;|&nbsp;\r\n                    <a target=\"_blank\" href={ torrent.url } rel=\"noopener noreferrer\"\r\n                        key={ torrent.hash } \r\n                        title={` Seeder: ${ torrent.seeds }   Pears: ${ torrent.peers }  Size: ${ torrent.size } ` }\r\n                    >\r\n                        { torrent.quality }\r\n                    </a>\r\n                </span>\r\n            );\r\n        })\r\n    return ( torrentLinks );  \r\n  }\r\n}\r\n \r\n// TorrentLinks.propTypes = {\r\n//   classes: PropTypes.object.isRequired,\r\n// };\r\n\r\n\r\nexport default withStyles(styles)(TorrentLinks);","import React, { Component } from 'react';\r\n// import PropTypes from 'prop-types';\r\n\r\n// import {  appConfig as _config } from '../globel.conf'\r\n\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\nconst styles ={};\r\n\r\nclass YoutubeLink extends Component {\r\n\r\n  render() {\r\n    const { yt_code } = this.props;\r\n    const youtubeUrl = `https://www.youtube.com/watch?v=${yt_code}&vq=hd720`;\r\n\r\n    return  yt_code && <span><a rel=\"noopener noreferrer\" target=\"_blank\" href={ youtubeUrl } title='You Tube'>Trailer</a>&nbsp;</span>  \r\n  }\r\n  \r\n}\r\n \r\n// YoutubeLink.propTypes = {\r\n//   classes: PropTypes.object.isRequired,\r\n// };\r\n\r\n\r\nexport default withStyles(styles)(YoutubeLink);","import React, { Component } from 'react';\r\n// import PropTypes from 'prop-types';\r\n\r\n// import {  appConfig as _config } from '../globel.conf'\r\n\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\nconst styles ={};\r\n\r\nclass Subtitle extends Component {\r\n\r\n  render() {\r\n    const { title } = this.props;\r\n    const toUrl = `https://subscene.com/subtitles/title?q=${title}&l=`     \r\n    return  <span>&nbsp;|&nbsp;<a target=\"_blank\" href={ toUrl } title='Subtitle' rel=\"noopener noreferrer\">En</a></span>  \r\n  }\r\n}\r\n \r\n// Subtitle.propTypes = {\r\n//   classes: PropTypes.object.isRequired,\r\n// };\r\n\r\n\r\nexport default withStyles(styles)(Subtitle);","import React, { Component } from 'react';\r\n// import PropTypes from 'prop-types';\r\n\r\n// import {  appConfig as _config } from '../globel.conf'\r\n\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\nconst styles ={};\r\n\r\nclass ImdbLink extends Component {\r\n\r\n  render() {\r\n    const { code } = this.props;\r\n    const toUrl = `https://www.imdb.com/title/${code}/`;\r\n\r\n    return  code && <span>&nbsp;|&nbsp;<a rel=\"noopener noreferrer\" target=\"_blank\" href={ toUrl } title='Imbd'>IMDb</a></span>  \r\n  }\r\n  \r\n}\r\n \r\n// ImdbLink.propTypes = {\r\n//   classes: PropTypes.object.isRequired,\r\n// };\r\n\r\n\r\nexport default withStyles(styles)(ImdbLink);","import React, { Component } from 'react';\r\n// import PropTypes from 'prop-types';\r\nimport MovieName from './MovieName';\r\nimport TorrentLinks from './TorrentLinks';\r\nimport YoutubeLink from './YoutubeLink';\r\nimport Subtitle from './Subtitle';\r\nimport ImdbLink from './ImdbLink';\r\n\r\n// import {  appConfig as _config } from '../globel.conf'\r\n\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport ButtonBase from '@material-ui/core/ButtonBase';\r\n\r\nimport LinearProgress from '@material-ui/core/LinearProgress';\r\nconst MIN = 0;\r\nconst MAX = 10;\r\nconst normalise = value => (value - MIN) * 100 / (MAX - MIN);\r\n\r\nconst styles = theme => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  paper: {\r\n    padding: theme.spacing.unit * 2,\r\n    margin: 'auto',\r\n    maxWidth: 500,\r\n  },\r\n  image: {\r\n    width: 128,\r\n    height: 128,\r\n  },\r\n  img: {\r\n    margin: 'auto',\r\n    display: 'block',\r\n    maxWidth: '100%',\r\n    maxHeight: '100%',\r\n  },\r\n});\r\n\r\nclass MovieItem extends Component {\r\n  constructor(){\r\n    super();\r\n    this.state = { \r\n        movie:{},\r\n    };\r\n  }\r\n \r\n  render() {\r\n    const { classes, movie } = this.props;\r\n    return (\r\n        <Grid container wrap=\"nowrap\" spacing={16}>\r\n            <Grid item>\r\n                <ButtonBase className={classes.image}>\r\n                    <img className={classes.img} alt={movie.title_long} src={movie.medium_cover_image} />\r\n                </ButtonBase>\r\n            </Grid>\r\n            <Grid item xs={12} sm container>\r\n                <Grid item xs container direction=\"column\" spacing={16}>\r\n                    <Grid item xs>\r\n                        <Typography gutterBottom variant=\"subtitle1\">\r\n                            <MovieName movie={movie}></MovieName>\r\n                        </Typography>\r\n                        { movie.genres && <Typography gutterBottom>[ { movie.genres && movie.genres.join(' / ') } ]</Typography> }\r\n                        <Typography color=\"textSecondary\">10 / { movie.rating } - { movie.language }</Typography>\r\n                        <LinearProgress variant=\"determinate\" value={normalise(movie.rating)} />\r\n                    </Grid>\r\n                    <Grid item>\r\n                        <Typography style={{ cursor: 'pointer' }}>\r\n                            <YoutubeLink yt_code={ movie.yt_trailer_code }></YoutubeLink>\r\n                            <TorrentLinks torrents={ movie.torrents } ></TorrentLinks>\r\n                            <ImdbLink code={ movie.imdb_code } ></ImdbLink>\r\n                            <Subtitle title={ movie.title_long } ></Subtitle>\r\n                        </Typography>\r\n                    </Grid>\r\n                </Grid>\r\n                <Grid item>\r\n                    <Typography variant=\"subtitle1\">..</Typography>\r\n                </Grid>\r\n            </Grid>\r\n        </Grid>\r\n      );\r\n    \r\n  }\r\n}\r\n \r\n// MovieItem.propTypes = {\r\n//   classes: PropTypes.object.isRequired,\r\n// };\r\n     /* <li key={movie.id}> <img alt={movie.title_long}  src={movie.small_cover_image} />  {movie.title_long} - {movie.rating}  {movie.genres.join()}</li>; */\r\n\r\n\r\nexport default withStyles(styles)(MovieItem);","import React, { Component } from 'react';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport {  appConfig  } from '../globel.conf'\r\n\r\nimport {createMuiTheme, withStyles } from '@material-ui/core/styles';\r\n\r\nimport socketIOClient from \"socket.io-client\";\r\nimport PropTypes from 'prop-types';\r\nimport MovieItem  from './MovieItem';\r\nimport { Typography } from '@material-ui/core';\r\nlet socketUrl = process.env.NODE_ENV==='development' ? appConfig.localHost :'/';\r\n\r\n\r\nfunction typographyV1Theme(theme) {\r\n  return createMuiTheme({\r\n    ...theme,\r\n    typography: {\r\n      useNextVariants: false,\r\n    },\r\n  });\r\n}\r\n\r\nconst styles = theme => ({\r\n  root: {\r\n    width: '100%',\r\n    // maxWidth: 500,\r\n    flexGrow: 1,\r\n    overflow: 'hidden',\r\n    padding: `0 ${theme.spacing.unit * 3}px`,\r\n  },\r\n  paper: {\r\n    maxWidth: 400,\r\n    margin: `${theme.spacing.unit}px auto`,\r\n    padding: theme.spacing.unit * 2,\r\n  },\r\n});\r\n\r\n// export default withStyles(styles)(MoviesList);\r\nclass MoviesList extends Component {\r\n  constructor(){\r\n    super();\r\n    this.state = { \r\n      movies: [], \r\n      liveCount:0 \r\n    };\r\n  }\r\n\r\n  setup() {\r\n    const socket = socketIOClient(socketUrl);\r\n    socket.on('connect', () => {\r\n      const socketId = socket.id;\r\n      socket.on(`init-${socketId}`, (data)=>{\r\n        console.log('init called',data);\r\n        this.setState({ movies: data.latestMovies});\r\n      })\r\n      console.log('Client => Connected => Server ID=>', socket.id, socket);\r\n      socket.on(\"newmovies\", (data) => {;\r\n        // this.setState({movies:[...this.state.movies,data.latestMovies]});\r\n        this.setState({ movies: data.latestMovies });\r\n      });\r\n      socket.on(\"liveCount\", (data) => {;\r\n        this.setState({ liveCount:data.liveCount });\r\n      });\r\n    });\r\n    socket.on('disconnect', () => {\r\n      const socketId = socket.id;\r\n      socket.removeAllListeners(\"newmovies\");\r\n      socket.removeAllListeners(`init-${socketId}`);\r\n      socket.removeAllListeners(`liveCount`);\r\n      socket.off(`ini t-${socketId}`)\r\n      socket.off(\"newmovies\")\r\n      socket.off(`liveCount`)\r\n      console.log(\"Socket Disconnected\");\r\n    });\r\n  }\r\n\r\n  componentDidMount(props, satets) {\r\n    setTimeout(this.setup.bind(this), 1000);\r\n  }\r\n\r\n  render() {\r\n    \r\n    const { classes } = this.props;\r\n    let movieList = this.state.movies.map((movie) =>{\r\n      return(\r\n        <Paper key={ movie.id } className={classes.paper} xs={12}> \r\n          <MovieItem key={ movie.id } movie={ movie }></MovieItem> \r\n        </Paper>\r\n      );\r\n      // return <li key={movie.id}> <img alt={movie.title_long} src={movie.small_cover_image} /> {movie.title_long} - {movie.rating} {movie.genres.join()}</li>;\r\n    })\r\n    return (\r\n      <Paper className={classes.root} > \r\n        <Typography align={'center'} component=\"h2\" variant=\"display2\" gutterBottom>\r\n          YTS Latest Movies ({this.state.liveCount})\r\n        </Typography>\r\n        { movieList } \r\n      </Paper>\r\n    );\r\n    \r\n  }\r\n}\r\n \r\nMoviesList.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(MoviesList);","import React, { Component } from 'react';\r\nimport MoviesList from './components/MoviesList';\r\n\r\n\r\nclass App extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"App\">\r\n        < MoviesList  />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}