{"version":3,"sources":["components/MovieItem.js","components/MoviesList.js","App.js","serviceWorker.js","index.js"],"names":["MovieItem","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","movie","value","_this$props","props","classes","youtubeUrl","concat","yt_trailer_code","react_default","a","createElement","Grid_default","container","wrap","spacing","item","ButtonBase_default","className","image","img","alt","title_long","src","medium_cover_image","xs","sm","direction","Typography_default","gutterBottom","variant","target","href","url","title","year","genres","join","color","rating","language","LinearProgress_default","style","cursor","Component","withStyles","theme","root","flexGrow","paper","padding","unit","margin","maxWidth","width","height","display","maxHeight","typographyV1Theme","createMuiTheme","objectSpread","typography","useNextVariants","MoviesList","movies","liveCount","_this2","socket","socketIOClient","on","socketId","id","data","console","log","setState","latestMovies","removeAllListeners","off","satets","setTimeout","setup","bind","movieList","map","Paper_default","key","components_MovieItem","styles","index_es","align","component","overflow","App","components_MoviesList","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.52cdd457.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport {  appConfig as _config } from '../globel.conf'\r\n\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport ButtonBase from '@material-ui/core/ButtonBase';\r\n\r\nimport LinearProgress from '@material-ui/core/LinearProgress';\r\nconst MIN = 0;\r\nconst MAX = 10;\r\nconst normalise = value => (value - MIN) * 100 / (MAX - MIN);\r\n\r\nconst styles = theme => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  paper: {\r\n    padding: theme.spacing.unit * 2,\r\n    margin: 'auto',\r\n    maxWidth: 500,\r\n  },\r\n  image: {\r\n    width: 128,\r\n    height: 128,\r\n  },\r\n  img: {\r\n    margin: 'auto',\r\n    display: 'block',\r\n    maxWidth: '100%',\r\n    maxHeight: '100%',\r\n  },\r\n});\r\n\r\nclass MovieItem extends Component {\r\n  constructor(){\r\n    super();\r\n    this.state = { \r\n        movie:{},\r\n    };\r\n  }\r\n \r\n  render() {\r\n    const { classes, movie } = this.props;\r\n    const youtubeUrl = `https://www.youtube.com/watch?v=${movie.yt_trailer_code}&vq=hd720`\r\n     /* <li key={movie.id}>\r\n      <img alt={movie.title_long} \r\n     src={movie.small_cover_image} /> \r\n     {movie.title_long} -\r\n      {movie.rating} \r\n     {movie.genres.join()}</li>; */\r\n    return (\r\n        <Grid container wrap=\"nowrap\" spacing={16}>\r\n            <Grid item>\r\n                <ButtonBase className={classes.image}>\r\n                    <img className={classes.img} alt={movie.title_long} src={movie.medium_cover_image} />\r\n                </ButtonBase>\r\n            </Grid>\r\n            <Grid item xs={12} sm container>\r\n                <Grid item xs container direction=\"column\" spacing={16}>\r\n                    <Grid item xs>\r\n                        <Typography gutterBottom variant=\"subtitle1\">\r\n                            <a target=\"_blank\" href={ movie.url } title={movie.title}> {movie.title}</a> { movie.year }\r\n                        </Typography>\r\n                        { movie.genres && <Typography gutterBottom>[ { movie.genres && movie.genres.join(' / ') } ]</Typography> }\r\n                        <Typography color=\"textSecondary\">10 / { movie.rating } - { movie.language }</Typography>\r\n                        <LinearProgress variant=\"determinate\" value={normalise(movie.rating)} />\r\n                    </Grid>\r\n                    <Grid item>\r\n                        <Typography style={{ cursor: 'pointer' }}>\r\n                            <a target=\"_blank\" href={ youtubeUrl } title={movie.title_long}> Trailer </a>\r\n                        </Typography>\r\n                    </Grid>\r\n                </Grid>\r\n                <Grid item>\r\n                    <Typography variant=\"subtitle1\">..</Typography>\r\n                </Grid>\r\n            </Grid>\r\n        </Grid>\r\n      );\r\n    \r\n  }\r\n}\r\n \r\n// MovieItem.propTypes = {\r\n//   classes: PropTypes.object.isRequired,\r\n// };\r\n\r\n\r\nexport default withStyles(styles)(MovieItem);","import React, { Component } from 'react';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport {  appConfig  } from '../globel.conf'\r\n\r\nimport {createMuiTheme, MuiThemeProvider, withStyles } from '@material-ui/core/styles';\r\n\r\nimport socketIOClient from \"socket.io-client\";\r\nimport PropTypes from 'prop-types';\r\nimport MovieItem  from './MovieItem';\r\nimport { Typography } from '@material-ui/core';\r\nlet socketUrl = process.env.NODE_ENV==='development' ? appConfig.localHost :'/';\r\n\r\n\r\nfunction typographyV1Theme(theme) {\r\n  return createMuiTheme({\r\n    ...theme,\r\n    typography: {\r\n      useNextVariants: false,\r\n    },\r\n  });\r\n}\r\n\r\nconst styles = theme => ({\r\n  root: {\r\n    width: '100%',\r\n    // maxWidth: 500,\r\n    flexGrow: 1,\r\n    overflow: 'hidden',\r\n    padding: `0 ${theme.spacing.unit * 3}px`,\r\n  },\r\n  paper: {\r\n    maxWidth: 400,\r\n    margin: `${theme.spacing.unit}px auto`,\r\n    padding: theme.spacing.unit * 2,\r\n  },\r\n});\r\n\r\n// export default withStyles(styles)(MoviesList);\r\nclass MoviesList extends Component {\r\n  constructor(){\r\n    super();\r\n    this.state = { \r\n      movies: [], \r\n      liveCount:0 \r\n    };\r\n  }\r\n\r\n  setup() {\r\n    const socket = socketIOClient(socketUrl);\r\n    socket.on('connect', () => {\r\n      const socketId = socket.id;\r\n      socket.on(`init-${socketId}`, (data)=>{\r\n        console.log('init called',data);\r\n        this.setState({ movies: data.latestMovies});\r\n      })\r\n      console.log('Client => Connected => Server ID=>', socket.id, socket);\r\n      socket.on(\"newmovies\", (data) => {;\r\n        // this.setState({movies:[...this.state.movies,data.latestMovies]});\r\n        this.setState({ movies: data.latestMovies });\r\n      });\r\n      socket.on(\"liveCount\", (data) => {;\r\n        this.setState({ liveCount:data.liveCount });\r\n      });\r\n    });\r\n    socket.on('disconnect', () => {\r\n      const socketId = socket.id;\r\n      socket.removeAllListeners(\"newmovies\");\r\n      socket.removeAllListeners(`init-${socketId}`);\r\n      socket.removeAllListeners(`liveCount`);\r\n      socket.off(`ini t-${socketId}`)\r\n      socket.off(\"newmovies\")\r\n      socket.off(`liveCount`)\r\n      console.log(\"Socket Disconnected\");\r\n    });\r\n  }\r\n\r\n  componentDidMount(props, satets) {\r\n    setTimeout(this.setup.bind(this), 1000);\r\n  }\r\n\r\n  render() {\r\n    \r\n    const { classes } = this.props;\r\n    let movieList = this.state.movies.map((movie) =>{\r\n      return(\r\n        <Paper key={ movie.id } className={classes.paper} xs={12}> \r\n          <MovieItem key={ movie.id } movie={ movie }></MovieItem> \r\n        </Paper>\r\n      );\r\n      // return <li key={movie.id}> <img alt={movie.title_long} src={movie.small_cover_image} /> {movie.title_long} - {movie.rating} {movie.genres.join()}</li>;\r\n    })\r\n    return (\r\n      <MuiThemeProvider theme={typographyV1Theme}>\r\n        <Paper className={classes.root} > \r\n          <Typography align={'center'} component=\"h2\" variant=\"display2\" gutterBottom>\r\n            YTS Latest Movies ({this.state.liveCount})\r\n          </Typography>\r\n          { movieList } \r\n        </Paper>\r\n      </MuiThemeProvider>\r\n    );\r\n    \r\n  }\r\n}\r\n \r\nMoviesList.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(MoviesList);","import React, { Component } from 'react';\r\nimport MoviesList from './components/MoviesList';\r\n\r\n\r\nclass App extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"App\">\r\n        < MoviesList  />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}